<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DarkModeTooltip" xml:space="preserve">
    <value>Enables the dark mode. Easier on the eyes at night.</value>
  </data>
  <data name="DeleteFolderTip" xml:space="preserve">
    <value>Deletes the currently selected folder and moves it to the trash bin if possible.

Shortcut: ctrl+delete</value>
  </data>
  <data name="DeleteImageTip" xml:space="preserve">
    <value>Moves the current image to the recycle bin.

Note: This cannot be reverted in-app. You must revert an deletion from inside the recycle bin yourself.</value>
  </data>
  <data name="EnterFolderToolTip" xml:space="preserve">
    <value>Enter the folder selected.

Shortcut: Enter</value>
  </data>
  <data name="FeedbackToolTip" xml:space="preserve">
    <value>Opens the Feedback page in a new window.
Your feedback will be heard!</value>
    <comment>Used for the Feedback button</comment>
  </data>
  <data name="FileNameAndRenameTip" xml:space="preserve">
    <value>Displays the name of the current image. You can rename image by clicking the text, editing it and then pressing enter.
If you accidentally clicked on the box and don't want to rename the file, just don't change anything and press enter.

Shortcut: ctrl + r</value>
  </data>
  <data name="GitHubAccountRequired" xml:space="preserve">
    <value>An Github account is required to file an issue</value>
    <comment>Used for the feedback button</comment>
  </data>
  <data name="GoBackToolTip" xml:space="preserve">
    <value>Goes back one image you skipped, if possible. 

Shortcut: ctrl + left arrow key</value>
  </data>
  <data name="LaunchesWindowsStore" xml:space="preserve">
    <value>Pressing this button will launch the windows store review page. Due to incompatibilities, feedback hub currently cannot be used for giving feedback. You have to give feedback through a review and update the review, when there was an improvement.</value>
  </data>
  <data name="LightModeTip" xml:space="preserve">
    <value>Enables the light mode. On by default.</value>
  </data>
  <data name="MoveToolTip" xml:space="preserve">
    <value>Moves the image to the selected folder. 

Shortcut: right arrow key</value>
  </data>
  <data name="NewFolderToolTip" xml:space="preserve">
    <value>Creates a new folder inside the current one.

Shortcut: F3</value>
    <comment>Used for the new folder button</comment>
  </data>
  <data name="OpenImageInExplorerToolTip" xml:space="preserve">
    <value>Opens the currently selected image in file explorer.

Shortcut: F5</value>
  </data>
  <data name="ProgressSliderToolTip" xml:space="preserve">
    <value>Sets the currently selected image.</value>
  </data>
  <data name="ResolutionBoxToolTip" xml:space="preserve">
    <value>Gives you the option to change the horizontal resolution, that the images should get loaded with.</value>
  </data>
  <data name="SearchToolTip" xml:space="preserve">
    <value>Shows and hides the search box.

Shortcut: ctrl+s</value>
    <comment>Used on the search toggle button.</comment>
  </data>
  <data name="SelectFolderToolTip" xml:space="preserve">
    <value>Selects the folder to sort.

Shortcut: F2</value>
    <comment>Used for the Select Folder Button</comment>
  </data>
  <data name="SettingsTip" xml:space="preserve">
    <value>Opens the settings. The settings allow for deeper customisation.
Just press it and look what's inside.

Shortcut: F4</value>
  </data>
  <data name="SkipToolTip" xml:space="preserve">
    <value>Skips the current image.

Shortcut: left arrow key</value>
  </data>
  <data name="UseDefaultColorTip" xml:space="preserve">
    <value>The default color: "Amber" (yellow) </value>
  </data>
  <data name="UseNativeAccentColorTip" xml:space="preserve">
    <value>Adjusts the colors of the app to look more consistent with the system.</value>
  </data>
  <data name="ShowInExplorerContextMenu" xml:space="preserve">
    <value>When enabled you can open a folder in Image Sort directly from the context menu in Windows Explorer.</value>
  </data>
  <data name="TouchFriendlyModeTip" xml:space="preserve">
    <value>Activates the touch-friendly mode.
Enlarges the window to require less precision when using the app with a touchscreen.
Gets activated, when the Windows 10 Tablet Mode is enabled.</value>
  </data>
  <data name="RotateImageTip" xml:space="preserve">
    <value>Rotates the image by the degree written in the button.
Press the ','-key to rotate the image by -90° and the '.'-key to rotate it by +90°.</value>
  </data>
</root>