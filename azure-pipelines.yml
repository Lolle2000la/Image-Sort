# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Image-Sort.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'MSIX'

steps:

- task: DownloadSecureFile@1
  name: 
  displayName: 'Download store association'
  inputs:
    secureFile: 'Package.StoreAssociation.xml'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.WorkFolder)\_temp'
    Contents: |
      Package.StoreAssociation.xml
    TargetFolder: '$(Build.SourcesDirectory)\src\ImageSort.MSIX'

- task: UseGitVersion@5
  inputs:
    versionSpec: '5.*'

- task: PowerShell@2
  displayName: 'Update Package.appxmanifest version'
  inputs:
    targetType: 'inline'
    script: |
      [xml]$manifest= get-content ".\src\ImageSort.MSIX\Package.appxmanifest"
      $manifest.Package.Identity.Version = "$(GitVersion.AssemblySemVer)"
      $manifest.save(".\src\ImageSort.MSIX\Package.appxmanifest")

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    msbuildArgs: '/restore /p:AppxPackageDir="$(build.artifactStagingDirectory)\AppxPackages\\" /p:AppxBundlePlatforms="$(buildPlatform)" /p:UapAppxPackageBuildMode=CI /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: |
      tests\ImageSort.UnitTests\ImageSort.UnitTests.csproj

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'AppxPackages'
    publishLocation: 'Container'

- task: store-publish@0
  inputs:
    serviceEndpoint: 'Windows Dev Center'
    appId: '9PGDK9WN8HG6'
    packagePath: '$(build.artifactStagingDirectory)\AppxPackages\*.appxupload'
    force: false
    skipPolling: false