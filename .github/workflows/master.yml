name: Image Sort CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
        includePrerelease: true
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
        
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    #- name: Restore dependencies
    #  run: dotnet restore --configuration Release
    - name: Build
      run: dotnet build --configuration Release #--no-restore
    - name: Test
      run: dotnet test .\tests\ImageSort.UnitTests\ImageSort.UnitTests.csproj --configuration Release --no-build
    - name: Build WIX project
      if: ${{ github.event_name == 'release' }}
      run: |
        cd .\src\ImageSort.WindowsSetup\;
        gitversion /updatewixversionfile | Out-String;
        & 'C:\Program Files (x86)\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\MSBuild.exe' /p:Configuration=Release /p:Platform=x64 /p:OutputPath=..\..\artifacts\x64 /p:BuildProjectReferences=false | Out-String;
        & 'C:\Program Files (x86)\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\MSBuild.exe' /p:Configuration=Release /p:Platform=x86 /p:OutputPath=..\..\artifacts\x86 /p:BuildProjectReferences=false | Out-String;
        cd ..\..;
    - name: Find MSI files
      id: find-msi-files
      if: ${{ github.event_name == 'release' }}
      run: |
        dir /s /b *.msi > msi-files.txt
        echo "::set-output name=msi-files::msi-files.txt"
    - name: Upload MSI files
      id: upload-msi-files
      uses: actions/upload-release-asset@v1.0.2
      if: ${{ github.event_name == 'release' }}
      with:
        asset_path: ${{ steps.find-msi-files.outputs.msi-files }}
        tag_name: ${{ github.ref }}
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TIME: ${{ github.run_number }}
